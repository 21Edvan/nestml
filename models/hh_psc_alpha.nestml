neuron hh_psc_alpha_nestml:

  state:
    V_m mV = -65. mV

    I_ex,  I_in pA

    alias alpha_n real = ( 0.01 * ( V_m + 55. ) ) / ( 1. - exp( -( V_m + 55. ) / 10. ) )
    alias beta_n real = 0.125 * exp( -( V_m + 65. ) / 80. )
    alias alpha_m  real = ( 0.1 * ( V_m + 40. ) ) / ( 1. - exp( -( V_m + 40. ) / 10. ) )
    alias beta_m  real = 4. * exp( -( V_m + 65. ) / 18. )
    alias alpha_h  real = 0.07 * exp( -( V_m + 65. ) / 20. )
    alias beta_h  real = 1. / ( 1. + exp( -( V_m + 35. ) / 10. ) )

    Act_m real =  alpha_m / ( alpha_m + beta_m )
    Act_h real = alpha_h / ( alpha_h + beta_h )
    Inact_n real =  alpha_n / ( alpha_n + beta_n )

    alias I_Na  real = g_Na * Act_m * Act_m * Act_m * Act_h * ( V_m - E_Na );
    alias I_K   real  = g_K * Inact_n * Inact_n * Inact_n * Inact_n * ( V_m - E_K );
    alias I_L   real = g_L * ( V_m - E_L );
  end

  equations:
    V_m' =( -( I_Na + I_K + I_L ) + I_stim + I_e + I_ex + I_in ) / C_m

    Act_m' = alpha_m * ( 1 - Act_m ) - beta_m * Act_m # m-variable
    Act_h' = alpha_h * ( 1 - Act_h ) - beta_h * Act_h # h-variable
    Inact_n' = alpha_n * ( 1 - Inact_n ) - beta_n * Inact_n # n-variable

    # synapses: alpha functions
    I_ex'' = -I_ex' / tau_syn_ex
    I_ex' = I_ex' - ( I_ex / tau_syn_ex )

    I_in'' = -I_in' / tau_syn_in
    I_in' = I_in' - ( I_in / tau_syn_in )
  end

  parameter:
    t_ref ms = 2.0       # Refractory period in ms
    g_Na nS = 12000.0      # Threshold Potential in mV
    g_K nS = 3600.0
    g_L nS = 30
    C_m pF = 100.0       # Membrane Capacitance in pF
    E_Na mV = 50
    E_K mV = -77.
    E_L mV = -54.402     # Leak reversal Potential (aka resting potential) in mV
    tau_syn_ex ms = 0.2    # Synaptic Time Constant Excitatory Synapse in ms
    tau_syn_in ms = 2.0    # Synaptic Time Constant for Inhibitory Synapse in ms
    I_e pA = 0           # Constant Current in pA
  end

  internal:
    # Impulse to add to DG_EXC on spike arrival to evoke unit-amplitude
    # conductance excursion.
    PSConInit_E real = 1.0 * e / tau_syn_ex

    # Impulse to add to DG_INH on spike arrival to evoke unit-amplitude
    # conductance excursion.
    PSConInit_I real = 1.0 * e / tau_syn_in

    # refractory time in steps
    r integer
    RefractoryCounts integer = steps(t_ref)

   # Input current injected by CurrentEvent.
   # This variable is used to transport the current applied into the
   # _dynamics function computing the derivative of the state vector.
   I_stim pA = 0
  end

  input:
      spikeInh   <- inhibitory spike
      spikeExc   <- excitatory spike
      currents <- current
  end

  output: spike

  update:
    U_old mV = V_m
    integrate(V_m)

    if r > 0:
      r -= 1
    elif V_m > 0 and U_old > V_m:
      r = RefractoryCounts
      emit_spike()
    end

    I_stim = currents.getSum()

    I_ex' += spikeExc.getSum() * PSConInit_E;
    I_in' += spikeInh.getSum() * PSConInit_I;
  end

end
