neuron iaf_cond_alpha_neuron:

  state:
    V_m mV = -70mV
  end

  equations:
    # Explicit
    shape GI = (e/tau_synI) * t * exp(-1/tau_synI*t)
    shape GE = (e/tau_synE) * t * exp(-1/tau_synE*t)
    V_m' = -1/Tau * (V_m - E_L)  - 1/C_m * (GI* (V_m-V_reversalI) - 1/C_m * GE * (V_m-V_reversalE) + (I_e + I_stim))
  end

  parameter:
   V_th mV = -55.0 mV     # Threshold Potential in mV
   V_reset mV = -60.0 mV  # Reset Potential in mV
   t_ref ms = 2.0 ms       # Refractory period in ms
   g_L nS = 16.6667 nS    # Leak Conductance in nS
   C_m pF = 250.0 pF      # Membrane Capacitance in pF
   alias Tau ms = (1 / g_L) * C_m
   V_reversalE mV = 0 mV          # Excitatory reversal Potential in mV
   V_reversalI mV = -85.0 mV      # Inhibitory reversal Potential in mV
   E_L mV = -70.0 mV       # Leak reversal Potential (aka resting potential) in mV
   tau_synE ms = 0.2 ms   # Synaptic Time Constant Excitatory Synapse in ms
   tau_synI ms = 2.0 ms   # Synaptic Time Constant for Inhibitory Synapse in ms
   I_e pA = 0 pA           # Constant Current in pA

   # Input current injected by CurrentEvent.
   # This variable is used to transport the current applied into the
   # _dynamics function computing the derivative of the state vector.
   I_stim pA = 0 pA
  end

  internal:
    r integer

    # Impulse to add to DG_EXC on spike arrival to evoke unit-amplitude
    # conductance excursion.
    PSConInit_E real = 1.0 * e / tau_synE

    # Impulse to add to DG_INH on spike arrival to evoke unit-amplitude
    # conductance excursion.
    PSConInit_I real = 1.0 * e / tau_synI

    # refractory time in steps
    RefractoryCounts integer = steps(t_ref)
  end

  input:
      spikeInh   <- inhibitory spike
      spikeExc   <- excitatory spike
      currents <- current
  end

  output: spike

  update:
    if r == 0: # not refractory
      # TODO intagrate

    else:
      r = r - 1
    end

    if r != 0: # not refractory
      r =  r - 1
      V_m = V_reset # clamp potential

    elif V_m >= V_th:
      r = RefractoryCounts
      V_m = V_reset # clamp potential
      emit_spike()

    end

    # TODO DGE = DGE + spikeExc.getSum() * PSConInit_E;
    # TODO DGI = DGI + spikeInh.getSum() * PSConInit_I;
    I_stim = currents.getSum()
  end

end
