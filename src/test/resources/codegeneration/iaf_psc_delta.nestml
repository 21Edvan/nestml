neuron iaf_psc_delta_nestml:

  state:
    V mV = 0 mV
    G real
    refr_spikes_buffer mV = 0 mV
    alias V_m mV = V + E_L # Membrane potential.
  end

  equations:
    G = delta(t, tau_m)
    V' = -1/tau_m * V + 1/C_m * (I_sum(G, spikes) + I_e + currents)
  end

  parameter:
    h       ms = resolution()
    tau_m   ms = 10    # Membrane time constant.
    C_m     pF = 250     # Capacity of the membrane
    t_ref   ms = 2       # Refractory period.
    tau_syn ms = 2       # Time constant of synaptic current.
    E_L     mV = -70     # Resting potential.
    I_e     pA = 0       # External current.
    alias V_reset mV = -70 - E_L
    alias Theta   mV = -55 - E_L
    V_min mV = -inf
    with_refr_input boolean = false
  end

  internal:
    r  integer
    RefractoryCounts integer = steps(t_ref)
  end

  input:
    spikes   <- spike
    currents <- current
  end

  output: spike

  update:
    if r == 0: # not refractory
      integrate(V)
      # if we have accumulated spikes from refractory period,
      # add and reset accumulator
      if with_refr_input and refr_spikes_buffer != 0.0:
        V += refr_spikes_buffer;
        refr_spikes_buffer = 0.0 mV;
      end
      # lower bound of membrane potential
      if V < V_min:
        V = V_min
      end
    else: # neuron is absolute refractory
      # read spikes from buffer and accumulate them, discounting
      # for decay until end of refractory period
      if with_refr_input:
        refr_spikes_buffer += spikes * exp(r * h / tau_m);
      else:
        spikes.getSum() # clear buffer entry, ignore spike
      end
      r -= 1
    end

    if V >= Theta: # threshold crossing
        r = RefractoryCounts
        V = V_reset
        emit_spike()
    end

  end

end