neuron hh_cond_alpha:

  state:
    V_m mV = 0.
    GE, GI nS = 0.
    DGE, DGI real = 0. # TODO: nS/ms
    n, m, h real = 0.
    alias alpha_n mV = norm_an*(V_m+V_an)/(1.-exp(-(V_m+V_an)/V_t_an))
    alias alpha_m mV = norm_am*(V_m-V_am)/(1.-exp(-(V_m+V_am)/V_t_am))
    alias alpha_h mV = norm_ah/exp(V_m/V_ah)
    alias beta_n mV = norm_bn/exp( ( V_m + V_bn ) / V_t_bn )
    alias beta_m mV = norm_bm/exp( V_m / V_bm )
    alias beta_h mV = norm_bh*(V_m+V_bh)/(1.-exp( ( V_m + V_bh ) / V_t_bh ))
  end

  equations:
    DGI' = DGI*-1/tau_synI
    GI'  = DGI + GI *-1/tau_synI
    DGE' = DGE*-1/tau_synE
    GE'  = DGE + GE *-1/tau_synE
    n'   = alpha_n*(1. - n) - beta_n*n
    m'   = alpha_m*(1. - m) - beta_m*m
    h'   = alpha_h*(1. - h) - beta_h*h
    V_m' = - (g_K*pow(n,4)*(V_m - E_K) + g_Na* pow(m,3)*h*(V_m - E_Na) + \
            g_L*(V_m - E_L))/C_m - (GI*(V_m-V_reversalI) + GE*(V_m-V_reversalE))/C_m + \
            (I_e + I_stim)/C_m
  end

  parameter:
    V_reset mV = -60.0   # Reset Potential in mV
    t_ref ms = 2.0       # Refractory period in ms

    E_Na mV = 50.
    E_K mV = -77.
    E_L mV = -54.402
    g_L nS = 30.     # Leak Conductance in nS
    g_Na nS = 12000.
    g_K nS = 3600.
    C_m pF = 250.0       # Membrane Capacitance in pF

    norm_an real = 0.014
    V_an mV = 44.
    V_t_an mV = 13.5
    norm_bn real = 0.0043
    V_bn mV = 44.
    V_t_bn mV = 34.

    norm_am real = 40.
    V_am mV = -75.5
    V_t_am mV = 2.3
    norm_bm real = 1.2262
    V_bm mV = 42.248

    norm_ah real = 0.0035
    V_ah mV = 24.186
    norm_bh real = 0.017
    V_bh mV = 51.25
    V_t_bh mV = 5.2

    V_reversalE mV = 0          # Excitatory reversal Potential in mV
    V_reversalI mV = -85.0      # Inhibitory reversal Potential in mV
    tau_synE ms = 0.2    # Synaptic Time Constant Excitatory Synapse in ms
    tau_synI ms = 2.0    # Synaptic Time Constant for Inhibitory Synapse in ms
    I_e pA = 0           # Constant Current in pA

    # Input current injected by CurrentEvent.
    # This variable is used to transport the current applied into the
    # _dynamics function computing the derivative of the state vector.
    I_stim pA = 0
  end

  internal:
    hTime   ms   = resolution()
    r integer
    # Impulse to add to DG_EXC on spike arrival to evoke unit-amplitude
    # conductance excursion.
    PSConInit_E real = 1.0 * e / tau_synE
    # Impulse to add to DG_INH on spike arrival to evoke unit-amplitude
    # conductance excursion.
    PSConInit_I real = 1.0 * e / tau_synI
    V_old real = 0. # potential on previous step


    RefractoryCounts integer = steps(t_ref) # refractory time in steps
  end

  input:
      spikeInh   <- inhibitory spike
      spikeExc   <- excitatory spike
      currents   <- current
  end

  output: spike

  update:
    V_old = V_m
    integrate(V_m)

    if r != 0: # refractory
      r =  r - 1
      V_m = V_reset # clamp potential
    elif V_m > 0. and V_old > V_m:
      r = RefractoryCounts
      emit_spike()
    end
  end

end
