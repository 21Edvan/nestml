neuron iaf_cond_exp_implicit:

  state:
    # membrane potential
    V mV = 0
    alias V_m mV = V + 0
    # inputs from the inh conductance
    GI nS = 0
    # inputs from the exc conductance
    GE nS = 0
  end

  equations:
    # Implicit
    GI' = GI' - GI/tau_synI
    GE' = GE'  -GE/tau_synE

    V' = -1/Tau * (V - E_L)  - 1/C_m * ( GI * (V-V_reversalI) + GE * (V-V_reversalE) - (I_e + I_stim))
  end

  parameter:
    # Threshold Potential in mV
    V_th mV = -55.0
    # Reset Potential in mV
    V_reset mV = -60.0
    # Refractory period in ms
    t_ref ms = 2.0
    # Leak Conductance in nS
    g_L ms = 16.6667
    # Membrane Capacitance in pF
    C_m pF = 250.0
    alias Tau ms = (1 / g_L) * C_m
    # Excitatory reversal Potential in mV
    V_reversalE mV = 0
    # Inhibitory reversal Potential in mV
    V_reversalI mV = -85.0
    # Leak reversal Potential (aka resting potential) in mV
    E_L mV = -70.0
    # Synaptic Time Constant Excitatory Synapse in ms
    tau_synE ms = 0.2
    # Synaptic Time Constant for Inhibitory Synapse in ms
    tau_synI ms = 2.0
    # Constant Current in pA
    I_e pA = 0

    # Input current injected by CurrentEvent.
    # This variable is used to transport the current applied into the
    # _dynamics function computing the derivative of the state vector.
    I_stim pA = 0
  end

  internal:
    # Impulse to add to DG_EXC on spike arrival to evoke unit-amplitude
    # conductance excursion.
    PSConInit_E real = 1.0 * e / tau_synE

    # Impulse to add to DG_INH on spike arrival to evoke unit-amplitude
    # conductance excursion.
    PSConInit_I real = 1.0 * e / tau_synI

    # refractory time in steps
    RefractoryCounts integer = steps(t_ref)

    r integer
  end

  input:
      spikeInh   <- inhibitory spike
      spikeExc   <- excitatory spike
      currents <- current
  end

  output: spike

  update:

    integrate(V)
    if r != 0: # not refractory
      r =  r - 1
      V = V_reset # clamp potential

    elif V >= V_th:
      r = RefractoryCounts
      V = V_reset # clamp potential
      emit_spike()

    end

    GE += spikeExc.getSum()
    GI += spikeInh.getSum()
    I_stim = currents.getSum()
  end

end
