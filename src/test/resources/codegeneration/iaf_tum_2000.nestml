neuron iaf_tum_2000_nestml:

  state:
    V mV
    I_shape_in, I_shape_ex real
    alias V_m mV = V #+ E_L # Membrane potential.
  end

  equations:
    I_shape_in = exp(-1/tau_syn_in*t)
    I_shape_ex = exp(-1/tau_syn_ex*t)
    V' = -1/Tau * V + 1/C_m * (I_sum(I_shape_in, in_spikes) + I_sum(I_shape_ex, ex_spikes) + I_e + currents)
  end

  parameter:
    C_m     pF = 250   # Capacity of the membrane
    Tau     ms = 10    # Membrane time constant.
    tau_syn_in ms = 2     # Time constant of synaptic current.
    tau_syn_ex ms = 2     # Time constant of synaptic current.
    t_ref_abs   ms = 2     # absolute refractory period.
    # total refractory period
    t_ref_tot   ms = 2     [[t_ref_tot >= t_ref_abs]] # if t_ref_abs == t_ref_tot iaf_tum_2000 equivalent to iaf_psc_exp
    E_L     mV = -70  # Resting potential.
    alias V_reset mV = -70 - E_L
    alias Theta   mV = -55 - E_L
    I_e     pA = 0     # External current.
  end

  internal:
    r_abs  integer
    r_tot  integer
    RefractoryCountsAbs integer = steps(t_ref_abs)
    RefractoryCountsTot integer = steps(t_ref_tot)
  end


  input:
    ex_spikes   <- excitatory spike
    in_spikes   <- inhibitory spike
    currents    <- current
  end

  output: spike

  update:
    if r_abs == 0: # neuron not absolute refractory, so evolve V
        integrate(V)
    else:
        r_abs -= 1
    end

    if r_tot == 0:
      if V >= Theta: # threshold crossing
          r_abs = RefractoryCountsAbs
          r_tot = RefractoryCountsTot
          V = V_reset
          emitSpike()
      end
    else:
      r_tot -= 1
    end



  end

end