package codegeneration.iaf_psc_alpha_multisynapse_module:
neuron iaf_psc_alpha_multisynapse_neuron:

  state:
    y0 real = 0.0 # !< Constant current
    y1_syn real<num_of_receptors> = 0.0
    y2_syn real<num_of_receptors> = 0.0
    y3_ real = 0 # This is the membrane potential RELATIVE TO RESTING POTENTIAL.
    currentValue real = 0 # This is the current in a time step. This is only here to allow logging
  end

  parameter:
    num_of_receptors integer = 1
    Tau ms = 10.0   # Membrane time constant
    C pF = 250.0    # Membrane capacitance
    TauR ms = 2.0  # Refractory period
    U0 mV = -70     # Resting potential
    I_e pA = 0      # External current in
    alias V_reset mV = -70 - U0 # Reset value of the membrane potential
    alias Theta mV = -55.0 - U0 # Threshold, RELATIVE TO RESTING POTENTIAL(!).
                                # I.e. the real threshold is (U0_+Theta_).
    # Lower bound, RELATIVE TO RESTING POTENTIAL(!).
    # I.e. the real lower bound is (LowerBound_+Theta_).
    LowerBound mV = -inf;
    tau_syn ms<num_of_receptors>    # Time constants of synaptic currents
    has_connections boolean = false # boolean flag which indicates whether the neuron has connections
  end

  function set_V_reset(v mV):
      V_reset = v - U0
  end

  function set_Theta(v mV):
      Theta = v - U0
  end

  internal:
    h   ms   = resolution()
    r integer = 0 # Number of refractory steps remaining
    P11_syn real<num_of_receptors> = -h / tau_syn
    P21_syn real<num_of_receptors> = Tau/(C*(1.0-Tau/tau_syn)) * P11_syn * (1.0 - exp(h*(1.0/tau_syn-1.0/Tau)));
    P20 real = exp(-h/Tau)
    P22 real = Tau/C*(1.0 - P22);

    RefractoryCounts integer = 0
    #PSCInitialValues real<num_of_receptors> = steps(t_ref)
  end

  input:
      spikeBufferInh<num_of_receptors> <- inhibitory spike
      currentBuffer <- current
  end

  output: spike

  update:


  end

end