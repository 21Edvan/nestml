# Generated from PyNestML.g4 by ANTLR 4.7.1
# encoding: utf-8
from __future__ import print_function
from antlr4 import *
from io import StringIO
import sys


def serializedATN():
    with StringIO() as buf:
        buf.write(u"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2")
        buf.write(u"G\u01c9\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4")
        buf.write(u"\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r")
        buf.write(u"\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22")
        buf.write(u"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4")
        buf.write(u"\30\t\30\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35")
        buf.write(u"\t\35\4\36\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4")
        buf.write(u"$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t")
        buf.write(u",\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63")
        buf.write(u"\t\63\4\64\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\4")
        buf.write(u"9\t9\4:\t:\4;\t;\4<\t<\4=\t=\4>\t>\4?\t?\4@\t@\4A\tA")
        buf.write(u"\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\3\2\3\2\3\2\3\2\3\2\3")
        buf.write(u"\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3")
        buf.write(u"\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3")
        buf.write(u"\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3\13\3\13")
        buf.write(u"\3\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3\17\3\17\3\20\3")
        buf.write(u"\20\3\21\3\21\3\22\3\22\3\22\3\22\3\23\3\23\3\24\3\24")
        buf.write(u"\3\25\3\25\3\26\3\26\3\27\3\27\3\27\3\30\3\30\3\30\3")
        buf.write(u"\31\3\31\3\32\3\32\3\32\3\33\3\33\3\33\3\34\3\34\3\34")
        buf.write(u"\3\35\3\35\3\35\3\36\3\36\3\36\3\37\3\37\3 \3 \3 \3 ")
        buf.write(u"\3!\3!\3!\3\"\3\"\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3")
        buf.write(u"$\3$\3$\3$\3$\3$\3$\3$\3$\3%\3%\3&\3&\3\'\3\'\3\'\3\'")
        buf.write(u"\3\'\3\'\3(\3(\3(\3)\3)\3)\3*\3*\3*\3+\3+\3+\3,\3,\3")
        buf.write(u"-\3-\3.\3.\3.\3/\3/\3/\3\60\3\60\3\60\3\60\3\60\3\60")
        buf.write(u"\3\60\3\61\3\61\3\61\3\62\3\62\3\62\3\62\3\62\3\63\3")
        buf.write(u"\63\3\63\3\63\3\63\3\64\3\64\3\64\3\64\3\65\3\65\3\65")
        buf.write(u"\3\66\3\66\3\66\3\66\3\67\3\67\3\67\3\67\3\67\38\38\3")
        buf.write(u"8\38\38\38\39\39\39\39\39\39\39\3:\3:\3:\3:\3:\3:\3;")
        buf.write(u"\3;\3;\3;\3;\3;\3;\3;\3;\3;\3;\3<\3<\3<\3<\3<\3<\3<\3")
        buf.write(u"<\3<\3<\3=\3=\3=\3=\3=\3=\3=\3=\3=\3=\3=\3=\3=\3=\3=")
        buf.write(u"\3>\3>\3>\3>\3>\3>\3>\3?\3?\3?\3?\3?\3?\3?\3?\3?\3?\3")
        buf.write(u"@\3@\3@\3@\3@\3@\3A\3A\3A\3B\3B\3B\3B\3B\3B\3B\3B\3C")
        buf.write(u"\3C\3C\3C\3C\3C\3D\3D\3D\3D\3D\3D\3D\3D\3D\3D\3D\3E\3")
        buf.write(u"E\3E\3E\3E\3E\3E\3E\3E\3E\3E\3F\3F\3F\3F\3F\3F\3F\2\2")
        buf.write(u"G\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r")
        buf.write(u"\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30")
        buf.write(u"/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K")
        buf.write(u"\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8")
        buf.write(u"o9q:s;u<w=y>{?}@\177A\u0081B\u0083C\u0085D\u0087E\u0089")
        buf.write(u"F\u008bG\3\2\2\2\u01c8\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3")
        buf.write(u"\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2")
        buf.write(u"\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2")
        buf.write(u"\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2")
        buf.write(u"\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)")
        buf.write(u"\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2")
        buf.write(u"\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2")
        buf.write(u"\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2")
        buf.write(u"\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2")
        buf.write(u"\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3")
        buf.write(u"\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2")
        buf.write(u"a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2")
        buf.write(u"\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2")
        buf.write(u"\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2")
        buf.write(u"\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2")
        buf.write(u"\u0085\3\2\2\2\2\u0087\3\2\2\2\2\u0089\3\2\2\2\2\u008b")
        buf.write(u"\3\2\2\2\3\u008d\3\2\2\2\5\u0095\3\2\2\2\7\u009a\3\2")
        buf.write(u"\2\2\t\u00a1\3\2\2\2\13\u00a9\3\2\2\2\r\u00ae\3\2\2\2")
        buf.write(u"\17\u00b0\3\2\2\2\21\u00b2\3\2\2\2\23\u00b5\3\2\2\2\25")
        buf.write(u"\u00b7\3\2\2\2\27\u00b9\3\2\2\2\31\u00bb\3\2\2\2\33\u00bd")
        buf.write(u"\3\2\2\2\35\u00bf\3\2\2\2\37\u00c3\3\2\2\2!\u00c5\3\2")
        buf.write(u"\2\2#\u00c7\3\2\2\2%\u00cb\3\2\2\2\'\u00cd\3\2\2\2)\u00cf")
        buf.write(u"\3\2\2\2+\u00d1\3\2\2\2-\u00d3\3\2\2\2/\u00d6\3\2\2\2")
        buf.write(u"\61\u00d9\3\2\2\2\63\u00db\3\2\2\2\65\u00de\3\2\2\2\67")
        buf.write(u"\u00e1\3\2\2\29\u00e4\3\2\2\2;\u00e7\3\2\2\2=\u00ea\3")
        buf.write(u"\2\2\2?\u00ec\3\2\2\2A\u00f0\3\2\2\2C\u00f3\3\2\2\2E")
        buf.write(u"\u00f5\3\2\2\2G\u0100\3\2\2\2I\u0109\3\2\2\2K\u010b\3")
        buf.write(u"\2\2\2M\u010d\3\2\2\2O\u0113\3\2\2\2Q\u0116\3\2\2\2S")
        buf.write(u"\u0119\3\2\2\2U\u011c\3\2\2\2W\u011f\3\2\2\2Y\u0121\3")
        buf.write(u"\2\2\2[\u0123\3\2\2\2]\u0126\3\2\2\2_\u0129\3\2\2\2a")
        buf.write(u"\u0130\3\2\2\2c\u0133\3\2\2\2e\u0138\3\2\2\2g\u013d\3")
        buf.write(u"\2\2\2i\u0141\3\2\2\2k\u0144\3\2\2\2m\u0148\3\2\2\2o")
        buf.write(u"\u014d\3\2\2\2q\u0153\3\2\2\2s\u015a\3\2\2\2u\u0160\3")
        buf.write(u"\2\2\2w\u016b\3\2\2\2y\u0175\3\2\2\2{\u0184\3\2\2\2}")
        buf.write(u"\u018b\3\2\2\2\177\u0195\3\2\2\2\u0081\u019b\3\2\2\2")
        buf.write(u"\u0083\u019e\3\2\2\2\u0085\u01a6\3\2\2\2\u0087\u01ac")
        buf.write(u"\3\2\2\2\u0089\u01b7\3\2\2\2\u008b\u01c2\3\2\2\2\u008d")
        buf.write(u"\u008e\7k\2\2\u008e\u008f\7p\2\2\u008f\u0090\7v\2\2\u0090")
        buf.write(u"\u0091\7g\2\2\u0091\u0092\7i\2\2\u0092\u0093\7g\2\2\u0093")
        buf.write(u"\u0094\7t\2\2\u0094\4\3\2\2\2\u0095\u0096\7t\2\2\u0096")
        buf.write(u"\u0097\7g\2\2\u0097\u0098\7c\2\2\u0098\u0099\7n\2\2\u0099")
        buf.write(u"\6\3\2\2\2\u009a\u009b\7u\2\2\u009b\u009c\7v\2\2\u009c")
        buf.write(u"\u009d\7t\2\2\u009d\u009e\7k\2\2\u009e\u009f\7p\2\2\u009f")
        buf.write(u"\u00a0\7i\2\2\u00a0\b\3\2\2\2\u00a1\u00a2\7d\2\2\u00a2")
        buf.write(u"\u00a3\7q\2\2\u00a3\u00a4\7q\2\2\u00a4\u00a5\7n\2\2\u00a5")
        buf.write(u"\u00a6\7g\2\2\u00a6\u00a7\7c\2\2\u00a7\u00a8\7p\2\2\u00a8")
        buf.write(u"\n\3\2\2\2\u00a9\u00aa\7x\2\2\u00aa\u00ab\7q\2\2\u00ab")
        buf.write(u"\u00ac\7k\2\2\u00ac\u00ad\7f\2\2\u00ad\f\3\2\2\2\u00ae")
        buf.write(u"\u00af\7*\2\2\u00af\16\3\2\2\2\u00b0\u00b1\7+\2\2\u00b1")
        buf.write(u"\20\3\2\2\2\u00b2\u00b3\7,\2\2\u00b3\u00b4\7,\2\2\u00b4")
        buf.write(u"\22\3\2\2\2\u00b5\u00b6\7,\2\2\u00b6\24\3\2\2\2\u00b7")
        buf.write(u"\u00b8\7\61\2\2\u00b8\26\3\2\2\2\u00b9\u00ba\7\'\2\2")
        buf.write(u"\u00ba\30\3\2\2\2\u00bb\u00bc\7-\2\2\u00bc\32\3\2\2\2")
        buf.write(u"\u00bd\u00be\7/\2\2\u00be\34\3\2\2\2\u00bf\u00c0\7p\2")
        buf.write(u"\2\u00c0\u00c1\7q\2\2\u00c1\u00c2\7v\2\2\u00c2\36\3\2")
        buf.write(u"\2\2\u00c3\u00c4\7A\2\2\u00c4 \3\2\2\2\u00c5\u00c6\7")
        buf.write(u"<\2\2\u00c6\"\3\2\2\2\u00c7\u00c8\7k\2\2\u00c8\u00c9")
        buf.write(u"\7p\2\2\u00c9\u00ca\7h\2\2\u00ca$\3\2\2\2\u00cb\u00cc")
        buf.write(u"\7\u0080\2\2\u00cc&\3\2\2\2\u00cd\u00ce\7(\2\2\u00ce")
        buf.write(u"(\3\2\2\2\u00cf\u00d0\7`\2\2\u00d0*\3\2\2\2\u00d1\u00d2")
        buf.write(u"\7~\2\2\u00d2,\3\2\2\2\u00d3\u00d4\7>\2\2\u00d4\u00d5")
        buf.write(u"\7>\2\2\u00d5.\3\2\2\2\u00d6\u00d7\7@\2\2\u00d7\u00d8")
        buf.write(u"\7@\2\2\u00d8\60\3\2\2\2\u00d9\u00da\7>\2\2\u00da\62")
        buf.write(u"\3\2\2\2\u00db\u00dc\7>\2\2\u00dc\u00dd\7?\2\2\u00dd")
        buf.write(u"\64\3\2\2\2\u00de\u00df\7?\2\2\u00df\u00e0\7?\2\2\u00e0")
        buf.write(u"\66\3\2\2\2\u00e1\u00e2\7#\2\2\u00e2\u00e3\7?\2\2\u00e3")
        buf.write(u"8\3\2\2\2\u00e4\u00e5\7>\2\2\u00e5\u00e6\7@\2\2\u00e6")
        buf.write(u":\3\2\2\2\u00e7\u00e8\7@\2\2\u00e8\u00e9\7?\2\2\u00e9")
        buf.write(u"<\3\2\2\2\u00ea\u00eb\7@\2\2\u00eb>\3\2\2\2\u00ec\u00ed")
        buf.write(u"\7c\2\2\u00ed\u00ee\7p\2\2\u00ee\u00ef\7f\2\2\u00ef@")
        buf.write(u"\3\2\2\2\u00f0\u00f1\7q\2\2\u00f1\u00f2\7t\2\2\u00f2")
        buf.write(u"B\3\2\2\2\u00f3\u00f4\7.\2\2\u00f4D\3\2\2\2\u00f5\u00f6")
        buf.write(u"\7t\2\2\u00f6\u00f7\7g\2\2\u00f7\u00f8\7e\2\2\u00f8\u00f9")
        buf.write(u"\7q\2\2\u00f9\u00fa\7t\2\2\u00fa\u00fb\7f\2\2\u00fb\u00fc")
        buf.write(u"\7c\2\2\u00fc\u00fd\7d\2\2\u00fd\u00fe\7n\2\2\u00fe\u00ff")
        buf.write(u"\7g\2\2\u00ffF\3\2\2\2\u0100\u0101\7h\2\2\u0101\u0102")
        buf.write(u"\7w\2\2\u0102\u0103\7p\2\2\u0103\u0104\7e\2\2\u0104\u0105")
        buf.write(u"\7v\2\2\u0105\u0106\7k\2\2\u0106\u0107\7q\2\2\u0107\u0108")
        buf.write(u"\7p\2\2\u0108H\3\2\2\2\u0109\u010a\7?\2\2\u010aJ\3\2")
        buf.write(u"\2\2\u010b\u010c\7=\2\2\u010cL\3\2\2\2\u010d\u010e\7")
        buf.write(u"u\2\2\u010e\u010f\7j\2\2\u010f\u0110\7c\2\2\u0110\u0111")
        buf.write(u"\7r\2\2\u0111\u0112\7g\2\2\u0112N\3\2\2\2\u0113\u0114")
        buf.write(u"\7-\2\2\u0114\u0115\7?\2\2\u0115P\3\2\2\2\u0116\u0117")
        buf.write(u"\7/\2\2\u0117\u0118\7?\2\2\u0118R\3\2\2\2\u0119\u011a")
        buf.write(u"\7,\2\2\u011a\u011b\7?\2\2\u011bT\3\2\2\2\u011c\u011d")
        buf.write(u"\7\61\2\2\u011d\u011e\7?\2\2\u011eV\3\2\2\2\u011f\u0120")
        buf.write(u"\7]\2\2\u0120X\3\2\2\2\u0121\u0122\7_\2\2\u0122Z\3\2")
        buf.write(u"\2\2\u0123\u0124\7]\2\2\u0124\u0125\7]\2\2\u0125\\\3")
        buf.write(u"\2\2\2\u0126\u0127\7_\2\2\u0127\u0128\7_\2\2\u0128^\3")
        buf.write(u"\2\2\2\u0129\u012a\7t\2\2\u012a\u012b\7g\2\2\u012b\u012c")
        buf.write(u"\7v\2\2\u012c\u012d\7w\2\2\u012d\u012e\7t\2\2\u012e\u012f")
        buf.write(u"\7p\2\2\u012f`\3\2\2\2\u0130\u0131\7k\2\2\u0131\u0132")
        buf.write(u"\7h\2\2\u0132b\3\2\2\2\u0133\u0134\7g\2\2\u0134\u0135")
        buf.write(u"\7n\2\2\u0135\u0136\7k\2\2\u0136\u0137\7h\2\2\u0137d")
        buf.write(u"\3\2\2\2\u0138\u0139\7g\2\2\u0139\u013a\7n\2\2\u013a")
        buf.write(u"\u013b\7u\2\2\u013b\u013c\7g\2\2\u013cf\3\2\2\2\u013d")
        buf.write(u"\u013e\7h\2\2\u013e\u013f\7q\2\2\u013f\u0140\7t\2\2\u0140")
        buf.write(u"h\3\2\2\2\u0141\u0142\7k\2\2\u0142\u0143\7p\2\2\u0143")
        buf.write(u"j\3\2\2\2\u0144\u0145\7\60\2\2\u0145\u0146\7\60\2\2\u0146")
        buf.write(u"\u0147\7\60\2\2\u0147l\3\2\2\2\u0148\u0149\7u\2\2\u0149")
        buf.write(u"\u014a\7v\2\2\u014a\u014b\7g\2\2\u014b\u014c\7r\2\2\u014c")
        buf.write(u"n\3\2\2\2\u014d\u014e\7y\2\2\u014e\u014f\7j\2\2\u014f")
        buf.write(u"\u0150\7k\2\2\u0150\u0151\7n\2\2\u0151\u0152\7g\2\2\u0152")
        buf.write(u"p\3\2\2\2\u0153\u0154\7p\2\2\u0154\u0155\7g\2\2\u0155")
        buf.write(u"\u0156\7w\2\2\u0156\u0157\7t\2\2\u0157\u0158\7q\2\2\u0158")
        buf.write(u"\u0159\7p\2\2\u0159r\3\2\2\2\u015a\u015b\7u\2\2\u015b")
        buf.write(u"\u015c\7v\2\2\u015c\u015d\7c\2\2\u015d\u015e\7v\2\2\u015e")
        buf.write(u"\u015f\7g\2\2\u015ft\3\2\2\2\u0160\u0161\7r\2\2\u0161")
        buf.write(u"\u0162\7c\2\2\u0162\u0163\7t\2\2\u0163\u0164\7c\2\2\u0164")
        buf.write(u"\u0165\7o\2\2\u0165\u0166\7g\2\2\u0166\u0167\7v\2\2\u0167")
        buf.write(u"\u0168\7g\2\2\u0168\u0169\7t\2\2\u0169\u016a\7u\2\2\u016a")
        buf.write(u"v\3\2\2\2\u016b\u016c\7k\2\2\u016c\u016d\7p\2\2\u016d")
        buf.write(u"\u016e\7v\2\2\u016e\u016f\7g\2\2\u016f\u0170\7t\2\2\u0170")
        buf.write(u"\u0171\7p\2\2\u0171\u0172\7c\2\2\u0172\u0173\7n\2\2\u0173")
        buf.write(u"\u0174\7u\2\2\u0174x\3\2\2\2\u0175\u0176\7k\2\2\u0176")
        buf.write(u"\u0177\7p\2\2\u0177\u0178\7k\2\2\u0178\u0179\7v\2\2\u0179")
        buf.write(u"\u017a\7k\2\2\u017a\u017b\7c\2\2\u017b\u017c\7n\2\2\u017c")
        buf.write(u"\u017d\7a\2\2\u017d\u017e\7x\2\2\u017e\u017f\7c\2\2\u017f")
        buf.write(u"\u0180\7n\2\2\u0180\u0181\7w\2\2\u0181\u0182\7g\2\2\u0182")
        buf.write(u"\u0183\7u\2\2\u0183z\3\2\2\2\u0184\u0185\7w\2\2\u0185")
        buf.write(u"\u0186\7r\2\2\u0186\u0187\7f\2\2\u0187\u0188\7c\2\2\u0188")
        buf.write(u"\u0189\7v\2\2\u0189\u018a\7g\2\2\u018a|\3\2\2\2\u018b")
        buf.write(u"\u018c\7g\2\2\u018c\u018d\7s\2\2\u018d\u018e\7w\2\2\u018e")
        buf.write(u"\u018f\7c\2\2\u018f\u0190\7v\2\2\u0190\u0191\7k\2\2\u0191")
        buf.write(u"\u0192\7q\2\2\u0192\u0193\7p\2\2\u0193\u0194\7u\2\2\u0194")
        buf.write(u"~\3\2\2\2\u0195\u0196\7k\2\2\u0196\u0197\7p\2\2\u0197")
        buf.write(u"\u0198\7r\2\2\u0198\u0199\7w\2\2\u0199\u019a\7v\2\2\u019a")
        buf.write(u"\u0080\3\2\2\2\u019b\u019c\7>\2\2\u019c\u019d\7/\2\2")
        buf.write(u"\u019d\u0082\3\2\2\2\u019e\u019f\7e\2\2\u019f\u01a0\7")
        buf.write(u"w\2\2\u01a0\u01a1\7t\2\2\u01a1\u01a2\7t\2\2\u01a2\u01a3")
        buf.write(u"\7g\2\2\u01a3\u01a4\7p\2\2\u01a4\u01a5\7v\2\2\u01a5\u0084")
        buf.write(u"\3\2\2\2\u01a6\u01a7\7u\2\2\u01a7\u01a8\7r\2\2\u01a8")
        buf.write(u"\u01a9\7k\2\2\u01a9\u01aa\7m\2\2\u01aa\u01ab\7g\2\2\u01ab")
        buf.write(u"\u0086\3\2\2\2\u01ac\u01ad\7k\2\2\u01ad\u01ae\7p\2\2")
        buf.write(u"\u01ae\u01af\7j\2\2\u01af\u01b0\7k\2\2\u01b0\u01b1\7")
        buf.write(u"d\2\2\u01b1\u01b2\7k\2\2\u01b2\u01b3\7v\2\2\u01b3\u01b4")
        buf.write(u"\7q\2\2\u01b4\u01b5\7t\2\2\u01b5\u01b6\7{\2\2\u01b6\u0088")
        buf.write(u"\3\2\2\2\u01b7\u01b8\7g\2\2\u01b8\u01b9\7z\2\2\u01b9")
        buf.write(u"\u01ba\7e\2\2\u01ba\u01bb\7k\2\2\u01bb\u01bc\7v\2\2\u01bc")
        buf.write(u"\u01bd\7c\2\2\u01bd\u01be\7v\2\2\u01be\u01bf\7q\2\2\u01bf")
        buf.write(u"\u01c0\7t\2\2\u01c0\u01c1\7{\2\2\u01c1\u008a\3\2\2\2")
        buf.write(u"\u01c2\u01c3\7q\2\2\u01c3\u01c4\7w\2\2\u01c4\u01c5\7")
        buf.write(u"v\2\2\u01c5\u01c6\7r\2\2\u01c6\u01c7\7w\2\2\u01c7\u01c8")
        buf.write(u"\7v\2\2\u01c8\u008c\3\2\2\2\3\2\2")
        return buf.getvalue()


class PyNestMLLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    T__46 = 47
    T__47 = 48
    T__48 = 49
    T__49 = 50
    T__50 = 51
    T__51 = 52
    T__52 = 53
    T__53 = 54
    T__54 = 55
    T__55 = 56
    T__56 = 57
    T__57 = 58
    T__58 = 59
    T__59 = 60
    T__60 = 61
    T__61 = 62
    T__62 = 63
    T__63 = 64
    T__64 = 65
    T__65 = 66
    T__66 = 67
    T__67 = 68
    T__68 = 69

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ u"DEFAULT_MODE" ]

    literalNames = [ u"<INVALID>",
            u"'integer'", u"'real'", u"'string'", u"'boolean'", u"'void'", 
            u"'('", u"')'", u"'**'", u"'*'", u"'/'", u"'%'", u"'+'", u"'-'", 
            u"'not'", u"'?'", u"':'", u"'inf'", u"'~'", u"'&'", u"'^'", 
            u"'|'", u"'<<'", u"'>>'", u"'<'", u"'<='", u"'=='", u"'!='", 
            u"'<>'", u"'>='", u"'>'", u"'and'", u"'or'", u"','", u"'recordable'", 
            u"'function'", u"'='", u"';'", u"'shape'", u"'+='", u"'-='", 
            u"'*='", u"'/='", u"'['", u"']'", u"'[['", u"']]'", u"'return'", 
            u"'if'", u"'elif'", u"'else'", u"'for'", u"'in'", u"'...'", 
            u"'step'", u"'while'", u"'neuron'", u"'state'", u"'parameters'", 
            u"'internals'", u"'initial_values'", u"'update'", u"'equations'", 
            u"'input'", u"'<-'", u"'current'", u"'spike'", u"'inhibitory'", 
            u"'excitatory'", u"'output'" ]

    symbolicNames = [ u"<INVALID>",
 ]

    ruleNames = [ u"T__0", u"T__1", u"T__2", u"T__3", u"T__4", u"T__5", 
                  u"T__6", u"T__7", u"T__8", u"T__9", u"T__10", u"T__11", 
                  u"T__12", u"T__13", u"T__14", u"T__15", u"T__16", u"T__17", 
                  u"T__18", u"T__19", u"T__20", u"T__21", u"T__22", u"T__23", 
                  u"T__24", u"T__25", u"T__26", u"T__27", u"T__28", u"T__29", 
                  u"T__30", u"T__31", u"T__32", u"T__33", u"T__34", u"T__35", 
                  u"T__36", u"T__37", u"T__38", u"T__39", u"T__40", u"T__41", 
                  u"T__42", u"T__43", u"T__44", u"T__45", u"T__46", u"T__47", 
                  u"T__48", u"T__49", u"T__50", u"T__51", u"T__52", u"T__53", 
                  u"T__54", u"T__55", u"T__56", u"T__57", u"T__58", u"T__59", 
                  u"T__60", u"T__61", u"T__62", u"T__63", u"T__64", u"T__65", 
                  u"T__66", u"T__67", u"T__68" ]

    grammarFileName = u"PyNestML.g4"

    def __init__(self, input=None, output=sys.stdout):
        super(PyNestMLLexer, self).__init__(input, output=output)
        self.checkVersion("4.7.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


